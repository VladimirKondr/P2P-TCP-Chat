name: P2P Chat CICD pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Concurrency setting to cancel in-progress runs on the same PR/branch
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  backend-lint:
    name: Backend Lint & Format
    runs-on: ubuntu-latest
    # Use the container we built. We tag with `main` as it's our stable CI image.
    # The ${{ github.repository }} variable makes it portable.
    container: ghcr.io/${{ github.repository }}/cicd-image:main
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      # We no longer install Bazel, but this action is still the best way to set up the caches.
      - name: Setup Bazel Caches
        uses: bazel-contrib/setup-bazel@0.15.0
        with:
          bazelisk-cache: true
          disk-cache: true
          repository-cache: true
      
      # The linting commands are unchanged, but they now run inside the container.
      - name: Check Code Formatting (clang-format)
        run: bazel test --config=clang-format //...

      - name: Run Static Analysis (clang-tidy)
        run: bazel test --config=clang-tidy //...

  backend-build-and-test:
    name: Backend Build & Test (${{ matrix.config }})
    runs-on: ubuntu-latest
    # The container is used for the entire matrix.
    container: ghcr.io/${{ github.repository }}/cicd-image:main
    strategy:
      fail-fast: false
      matrix:
        config: [debug, asan, ubsan, tsan]
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      # Again, just use this action for its excellent caching capabilities.
      - name: Setup Bazel Caches
        uses: bazel-contrib/setup-bazel@0.15.0
        with:
          bazelisk-cache: true
          disk-cache: true
          repository-cache: true
      
      - name: Verify Bazel Version (from container)
        run: bazel --version
        
      - name: Build and Run Tests (${{ matrix.config }})
        run: bazel test --config=ci --config=${{ matrix.config }} //...

  build-and-test-frontend:
    name: Frontend Build & Test
    runs-on: ubuntu-latest
    # No changes needed for the frontend job
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Install dependencies
        run: flutter pub get
        working-directory: p2p_chat_client

      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .
        working-directory: p2p_chat_client

      - name: Analyze project source
        run: flutter analyze --fatal-warnings
        working-directory: p2p_chat_client

      - name: Run tests
        run: flutter test
        working-directory: p2p_chat_client

      - name: Build APK for main branch
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: flutter build apk
        working-directory: p2p_chat_client