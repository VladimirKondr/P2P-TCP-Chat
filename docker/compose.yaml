services:
  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile.app
    ports:
      - "8000:8000"
    depends_on:
      p2p_chat_db:
        condition: service_healthy
    environment:
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
      DB_CONN_STRING: postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
  p2p_chat_db:
    image: postgres
    restart: always
    environment:
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
    volumes:
      - p2p_chat_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 1s
      timeout: 5s
      retries: 10

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

volumes:
  p2p_chat_pgdata: